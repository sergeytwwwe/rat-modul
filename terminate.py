#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import psutil
import time
import platform
import logging
try:
    import win32gui
    import win32process
except ImportError:
    pass  # –î–ª—è –Ω–µ-Windows —Å–∏—Å—Ç–µ–º

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def terminate_active_process():
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å"""
    try:
        logger.info("üíÄ –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å")
        start_time = time.time()
        
        active_window = None
        if platform.system() == "Windows":
            window = win32gui.GetForegroundWindow()
            active_window = win32gui.GetWindowText(window)
            _, pid = win32process.GetWindowThreadProcessId(window)
            process = psutil.Process(pid)
            process.terminate()
        
        execution_time = round(time.time() - start_time, 2)
        logger.info(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {execution_time} —Å–µ–∫")
        return True, execution_time, active_window
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞: {e}")
        return False, 0, None
