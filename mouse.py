#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import logging
import random
import time
import platform

logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è pywin32
try:
    import win32api
    PYWIN32_AVAILABLE = True
except ImportError:
    PYWIN32_AVAILABLE = False
    logger.error("‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–æ–¥—É–ª—å pywin32. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é 'pip install pywin32'")

def jiggle():
    """–î–≤–∏–≥–∞–µ—Ç –º—ã—à–∫–æ–π"""
    try:
        logger.info("üñ± –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: –î–µ—Ä–≥–∞—Ç—å –º—ã—à–∫–æ–π")
        if platform.system() != "Windows":
            logger.warning("üñ± –§—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ Windows")
            return False
        if not PYWIN32_AVAILABLE:
            logger.error("‚ùå –ú–æ–¥—É–ª—å pywin32 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            return False
        
        x, y = win32api.GetCursorPos()
        for _ in range(10):
            dx = random.randint(-50, 50)
            dy = random.randint(-50, 50)
            win32api.SetCursorPos((x + dx, y + dy))
            time.sleep(0.05)
        win32api.SetCursorPos((x, y))
        logger.info("üñ± –ú—ã—à—å —É—Å–ø–µ—à–Ω–æ –¥–µ—Ä–Ω—É—Ç–∞")
        return True
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∫–∏: {e}")
        return False
